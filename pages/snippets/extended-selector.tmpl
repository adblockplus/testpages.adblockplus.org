template = testcase
title = Extended selector to access shadow DOM elements
description = Check that the CSS selector's extended syntax is working as expected.

{% set case = "Simple closed shadow root with hide-if-contains" %}
{% set id = get_id(case) %}

<svg style="display: none;">
  <text id="svg1" y="14" style="fill: currentcolor; font-size: 16px; overflow: visible;">
    svg-test - Failed. Element is not hidden.
  </text>
</svg>
<svg style="display: none;"><use id="svg2" href="#svg1"></use></svg>
<svg style="display: none;">
    <text id="svg3" y="14" style="fill: currentcolor; font-size: 16px; overflow: visible;">
        <tspan>
            svg-test - Failed. Element is not hidden.
        </tspan>
    </text>
</svg>

<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that basic usage of hide-if-contains works as expected against a closed shadow root.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div class="testcase-examplecontent">Example Content</div>
    <div id="hic-simple-sh-id" data-expectedresult="fail"></div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element in the test case above should be hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains 'hic-simple-sh' 'div[id]' 'div[id] ^^sh^^ span'</pre></li>
  </ul>
</section>
<script type="text/javascript">
  const hicSimpleShTarget = document.getElementById("hic-simple-sh-id");
  const hicSimpleShRoot = hicSimpleShTarget.attachShadow({mode: "closed"});
  const child = document.createElement("span");
  child.innerHTML = "hic-simple-sh <br> Failed. Element is not hidden.";
  hicSimpleShRoot.appendChild(child);
</script>

{% set case = "Wrapping shadow root with hide-if-contains" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that basic usage of hide-if-contains works as expected against a nested closed shadow root.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div class="testcase-examplecontent">Example Content</div>
    <div id="hic-nested-sh-id" data-expectedresult="fail"></div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element added to the test case above should be hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains 'hic-nested-sh' 'div[id]' 'div[id] ^^sh^^ div ^^sh^^ span'</pre></li>
  </ul>
</section>
<script type="text/javascript">
  const hicNestedShTarget = document.getElementById("hic-nested-sh-id");
  const shadowRoot1 = hicNestedShTarget.attachShadow({mode: "closed"});
  const parent = document.createElement("div");
  shadowRoot1.appendChild(parent);
  const nestedChild = document.createElement('span');
  nestedChild.innerHTML = "hic-nested-sh <br> Failed. Element is not hidden.";
  const shadowRoot2 = parent.attachShadow({mode: 'closed'});
  shadowRoot2.appendChild(nestedChild);
</script>

{% set case = "Closed shadow root wraps several elements with hide-if-contains" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that usage of hide-if-contains works as expected when transpassing a shadow root boundary, 
    hiding one element within but not the whole shadow root.</p>
  <div id="wrapping-sh-root" class="testcase-area"></div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element in the test case above should be hidden and the green one not hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains 'hic-wrapping-sh' 'div[id] ^^sh^^ div' </pre></li>
  </ul>
</section>

<script type="text/javascript">
  const wrappingElem = document.getElementById("wrapping-sh-root");
  const wrappingShadowRoot = wrappingElem.attachShadow({mode: 'closed'});

  const hicWrappingShStyle = document.createElement('style');
  hicWrappingShStyle.textContent = `
    :host .testcase-examplecontent,
    :host .testcase-expected-view,
    [data-expectedresult="pass"] {
      flex-grow: 1;
      padding: 0.5em;
      color: #fff;
      background-color: #0dc74b;
    }

    :host [data-expectedresult="fail"] {
      flex-grow: 1;
      padding: 0.5em;
      color: #fff;
      background-color: #c70d2c;
    }
  `;
  wrappingShadowRoot.appendChild(hicWrappingShStyle);
  
  const testcaseExamplecontent = document.createElement('div');
  testcaseExamplecontent.classList.add('testcase-examplecontent');
  testcaseExamplecontent.textContent = "Example Content";
  wrappingShadowRoot.appendChild(testcaseExamplecontent);

  const testcaseContent = document.createElement('div');
  testcaseContent.classList.add('testcase-content');
  testcaseContent.setAttribute('data-expectedresult', 'fail');
  testcaseContent.innerHTML = 'hic-wrapping-sh <br> Failed. Element is not hidden.';
  wrappingShadowRoot.appendChild(testcaseContent);

  const testcaseExpectedView = document.createElement('div');
  testcaseExpectedView.classList.add('testcase-expected-view');
  testcaseExpectedView.setAttribute('data-expectedresult', 'pass');
  testcaseExpectedView.textContent = "Should not be hidden";
  wrappingShadowRoot.appendChild(testcaseExpectedView);
</script>


{% set case = "Simple svg-use pattern with hide-if-contains" %}
{% set id = get_id(case) %}

<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that usage of hide-if-contains works as expected against a shadow DOM created with SVG.</p>
  <div id="{{id}}-area" class="testcase-area">
    <p class="testcase-examplecontent">Example Content</p>
    <p data-expectedresult="fail">
      <svg height="18"> <use href="#svg1"></use> </svg>
    </p>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red elements in the test case above should be hidden and the green one not hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains 'svg-test' 'div[id] p' 'div[id] p svg use ^^svg^^'</pre></li>
  </ul>
</section>


{% set case = "Nested svg-use pattern with hide-if-contains" %}
{% set id = get_id(case) %}

<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that usage of hide-if-contains works as expected against nested SVGs</p>
  <div id="{{id}}-area" class="testcase-area">
    <p class="testcase-examplecontent">Example Content</p>
    <p data-expectedresult="fail">
      <svg height="18"> <use href="#svg2"></use> </svg>
    </p>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red elements in the test case above should be hidden and the green one not hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains 'svg-test' 'div[id] p' 'div[id] p svg use ^^svg^^ ^^svg^^'</pre></li>
  </ul>
</section>

{% set case = "Subtree in svg-use pattern with hide-if-contains" %}
{% set id = get_id(case) %}

<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that usage of hide-if-contains works as expected against subtree within svg-use</p>
  <div id="{{id}}-area" class="testcase-area">
    <p class="testcase-examplecontent">Example Content</p>
    <p data-expectedresult="fail">
      <svg height="18"> <use href="#svg3"></use> </svg>
    </p>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red elements in the test case above should be hidden and the green one not hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains 'svg-test' 'div[id] p' 'div[id] p svg use ^^svg^^ tspan'</pre></li>
  </ul>
</section>

{% set case = "Closed shadow root with hide-if-contains-visible-text" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that basic usage of hide-if-contains-visible-text works as expected against a closed shadow root.</p>
  <div id="basic-target" class="testcase-area">
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
    <div id="parent-basic" class="testcase-content" data-expectedresult="fail" aria-label="{{id}}-fail" >
      <div class="article">
        <div id="label"></div>
        Failed. Element not hidden.
      </div>
    </div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element in the test case above should be hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains-visible-text 'hicvt-test' '#parent-basic' '#label ^^sh^^ div'</pre></li>
  </ul>
</section>
<script type="text/javascript">
  const label = document.getElementById("label");
  const labelShRoot = label.attachShadow({mode: "closed"});

  const styleHicvt = document.createElement("style");
  styleHicvt.innerHTML = `
    :host .transparent {
      opacity: 0;
      position: absolute;
      display: block;
      color: transparent;
    }

    :host .zerosize {
      font-size: 0;
    }

    :host div {
      display: block;
    }

    :host .a {
      display: inline-block;
      white-space: pre-wrap;
    }
    `;
  labelShRoot.appendChild(styleHicvt);

  const textWrapper = document.createElement("div");
  
  const child1 = document.createElement("div");
  child1.classList.add("a", "transparent");
  child1.textContent = "hi";
  textWrapper.appendChild(child1);

  const child2 = document.createElement("div");
  child2.classList.add("a");
  child2.textContent = "hi";
  textWrapper.appendChild(child2);

  const child3 = document.createElement("div");
  child3.classList.add("a", "zerosize");
  child3.textContent = "hi";
  textWrapper.appendChild(child3);

  const child4 = document.createElement("div");
  child4.classList.add("a", "transparent");
  child4.textContent = "cvt";
  textWrapper.appendChild(child4);

  const child5 = document.createElement("div");
  child5.classList.add("a");
  child5.textContent = "cvt-test";
  textWrapper.appendChild(child5);

  const child6 = document.createElement("div");
  child6.classList.add("a", "zerosize");
  child6.textContent = "cvt";
  textWrapper.appendChild(child6);

  labelShRoot.appendChild(textWrapper);
</script>

{% set case = "Simple svg-use pattern with hide-if-contains-visible-text" %}
{% set id = get_id(case) %}
<svg style="display: none;">
  <text id="svg-hicvt">
    <tspan y="14" style="fill: currentcolor; font-size: 16px; overflow: visible;">sv</tspan>
    <tspan x="0" style="fill: transparent; font-size: 0; visibility: collapse">sv</tspan>
    <tspan x="17" y="14" style="fill: currentcolor; font-size: 16px; overflow: visible;">g-hi</tspan>
    <tspan x="0" style="fill: transparent; font-size: 0; visibility: collapse">g-hi</tspan>
    <tspan x="44" y="14" style="fill: currentcolor; font-size: 16px; overflow: visible;">cvt</tspan>
    <tspan x="0" style="fill: transparent; font-size: 0; visibility: collapse">cvt</tspan>
  </text>
</svg>
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that basic usage of hide-if-contains-visible-text works as expected against .</p>
  <div id="basic-target" class="testcase-area">
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
    <div id="parent-basic" class="testcase-content" data-expectedresult="fail" aria-label="{{id}}-fail" >
      <div class="article" style="display: flex; flex-wrap: wrap;">
        <svg style="flex: 0 1 4.5rem"> <use href="#svg-hicvt"></use> </svg>
        Failed. Element not hidden.
      </div>
    </div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element in the test case above should be hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains-visible-text 'svg-hicvt' div[id]>div 'div[id]>div>svg>use ^^svg^^'</pre></li>
  </ul>
</section>

{% set case = "Simple closed shadow root with hide-if-contains-and-matches-style" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that basic usage of hide-if-contains-and-matches-style works as expected against a closed shadow root.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
    <div id="hicamss-target" data-expectedresult="fail"></div>
    <div id="lkvsaq" data-expectedresult="pass"><div><span>Should not be hidden.</span><span class="label" style="display: none;">hicamss</span></div></div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element in the test case above should be hidden and the green one not hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains-and-matches-style hicamss div[id] 'div[id] ^^sh^^ span.label' /./ 'font-size: 16px;'</pre></li>
  </ul>
</section>
<script type="text/javascript">
  const labelTarget = document.getElementById("hicamss-target");
  const hicamssShRoot = labelTarget.attachShadow({mode: "closed"});
  const hicamssLabel = document.createElement("span");
  hicamssLabel.textContent= "hicamss. Failed. Element not hidden";
  hicamssLabel.className = "label";
  hicamssShRoot.appendChild(hicamssLabel);
</script>


{% set case = "Simple svg-use pattern with hide-if-contains-and-matches-style" %}
{% set id = get_id(case) %}
<svg style="display: none;">
  <text id="svg-hicamss" y="14" style="fill: currentcolor; font-size: 16px; overflow: visible;">hicamss</text>
</svg>
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that basic usage of hide-if-contains-and-matches-style works as expected against a shadow DOM created with SVG.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
    <div id="isnfnv" data-expectedresult="fail" style="display: flex;"><span>Failed. Element is not hidden.</span><svg><use href="#svg-hicamss"></use></svg></div>
    <div class="testcase-expected-view"><div><span>Should not be hidden.</span></div>
    </div>
    <div id="lkvsaq" data-expectedresult="pass"><div><span>Should not be hidden.</span><span class="label" style="display: none;">hicamss</span></div></div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element in the test case above should be hidden and the green one not hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-contains-and-matches-style hicamss div[id] 'div[id] svg use ^^svg^^' /./ 'font-size: 16px;'</pre></li>
  </ul>
</section>

{% set case = "Simple closed shadow root with hide-if-has-and-matches-style" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that basic usage of hide-if-has-and-matches-style works as expected against a closed shadow root.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
    <div id="hihamss-target" data-expectedresult="fail"></div>
    <div id="lkvsaqg" data-expectedresult="pass"><div><span>Should not be hidden.</span><span class="label" style="display: none;">hicamss</span></div></div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element in the test case above should be hidden and the green one not hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-has-and-matches-style a[href="#hihamss"] div[id] 'div[id] ^^sh^^ span.label'</pre></li>
  </ul>
</section>
<script type="text/javascript">
  const labelTargetHihamss = document.getElementById("hihamss-target");
  const hihamssShRoot = labelTargetHihamss.attachShadow({mode: "closed"});
  const hihamssLabel = document.createElement("span");
  const hihamssA = document.createElement("a");
  hihamssA.setAttribute("href", "#hihamss")
  hihamssA.setAttribute("style", "color: inherit; text-decoration: none;")
  hihamssA.textContent= "hihamss";
  hihamssLabel.innerHTML += "Failed. Element should be hidden.<br>";
  hihamssLabel.className = "label";
  hihamssLabel.appendChild(hihamssA)
  hihamssShRoot.appendChild(hihamssLabel);
</script>

{% set case = "Simple svg-use pattern with hide-if-has-and-matches-style" %}
{% set id = get_id(case) %}
<svg style="display: none;">
  <text id="svg-hihamss" y="14" style="fill: currentcolor; font-size: 16px; overflow: visible;">
    <a href="#hihamss">hihamss</a>
  </text>
</svg>
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that basic usage of hide-if-has-and-matches-style works as expected against a shadow DOM created with SVG.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
    <div id="hihamssvg-target" data-expectedresult="fail" style="display: flex;"><span>Failed. Element is not hidden.</span><svg><use href="#svg-hihamss"></use></svg></div>
    <div id="lkvsaqg" data-expectedresult="pass"><div><span>Should not be hidden.</span><span class="label" style="display: none;">hicamss</span></div></div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element in the test case above should be hidden and the green one not hidden.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#$#hide-if-has-and-matches-style a[href="#hihamss"] div[id] 'div[id] svg use ^^svg^^'</pre></li>
  </ul>
</section>
