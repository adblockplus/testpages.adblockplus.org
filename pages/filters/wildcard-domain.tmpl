template = testcase
title = Wildcard Domain
description = Check that a filter using the $domain filter with wildcard is working as expected.

<style>
.ehe-properties {
  width: 230px;
}

.ehe-chained {
  width: 231px;
}

.ehe-wildcard {
  font-weight: 100;
}

.ehe-regex1 {
  width: 121px;
}

.ehe-regex2 {
  width: 125px;
}

.ehe-regex3 {
  width: 126px;
}
</style>


<div class="note">
  <h2 class="note">This scenario won't work when running testpages on localhost due to missing domain </h2> 
  <h3 class="note">Please refer to project documentation on how to map localhost to proper domain </h3>
</div>

{% set case = "Element Hiding: Static" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a filter using the $domain filter with wildcard option works on a static target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
    <img id="{{id}}-pass-1" src="/testfiles/wildcard-domain/static/excluded/image.png" data-dp="pass" aria-label="{{id}}-pass">
    <img id="{{id}}-fail-1" src="/testfiles/wildcard-domain/static/target/image.png" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The green image containing the white square should not be blocked, and the red image should be blocked and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>/testfiles/wildcard-domain/static/target/$domain=abptestpages.org</pre></li>
  </ul>
</section>


{% set case = "Element Hiding: Dynamic" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a filter using the $domain filter with wildcard option works on a dynamic target.</p>
  <div id="dynamic-target" class="testcase-area">
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red image should be blocked and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>/testfiles/wildcard-domain/dynamic/$domain=abptestpages.org</pre></li>
  </ul>
</section>


{% set case = "Element Hiding: Contains with Wildcards" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that an element hiding filter with domain wildcard using a "contains" selector hides its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" style="color: white; width: 203px;" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>abptestpages.*##div[style*="width: 203px;"]</pre></li>
  </ul>
</section>

{% set case = "Element Hiding with ID" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that an element hiding filter using an ID selector and wildcard domain hides its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="eh-id" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>abptestpages.*###eh-id</pre></li>
  </ul>
</section>

{% set case = "Element Hiding: Attribute Selector " %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that an element hiding filter with wildacrd domain filter using an attribute selector hides its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" width="100" height="100" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>abptestpages.*##div[height="100"][width="100"]</pre></li>
  </ul>
</section>

{% set case = "Element Hiding Emulation: Basic :-abp-properties() usage" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that an element hiding emulation filter using a :-abp-properties() selector and wildcard domain hides its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" class="ehe-properties" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>abptestpages.*#?#div:-abp-properties(width: 230px)</pre></li>
  </ul>
</section>

{% set case = "Element Hiding Emulation:  Basic :-abp-has() usage" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that an element hiding emulation filter using a :-abp-has() selector and wildcard domain hides its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">
      <div>
        <span class="ehe-abp-has">Target</span>
      </div>
    </div>
    <div class="testcase-examplecontent">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>abptestpages.*#?#div:-abp-has(>div>span.ehe-abp-has)</pre></li>
  </ul>
</section>

{% set case = "Element Hiding Emulation Chained extended selectors " %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that element hiding emulation filter using several of the extended selectors and wildcard domain hides its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">
      <div class="ehe-chained">Target</div>
    </div>
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>abptestpages.*#?#div:-abp-has(> div:-abp-properties(width: 231px))</pre></li>
  </ul>
</section>

{% set case = "Element Hide Emulation: wildcard in extended selector and wildcard in domain" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that an element hiding emulation filter using wildcards still hides its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" class="ehe-wildcard" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The red element should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>abptestpages.*#?#.ehe-wildcard:-abp-properties(font-weight:*)</pre></li>
  </ul>
</section>

{% set case = "Element Hiding Emulation: Regular expression in :-abp-contains()" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that an element hiding emulation filter using regular expressions and wildcard domain still hides its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">ehe-containsregex1</div>
    <div id="{{id}}-fail-2" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">ehe-containsregex2</div>
    <div class="testcase-examplecontent" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>Both red target elements should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>abptestpages.*#?#div > div:-abp-contains(ehe-containsregex)</pre></li>
  </ul>
</section>

<script>
  "use strict";

  let image = document.createElement("img");
  image.src = "/testfiles/wildcard-domain/dynamic/image.png";
  image.setAttribute("data-expectedresult", "fail");
  image.setAttribute("data-dp", "fail");
  image.setAttribute("aria-label", "{{id}}-fail");
  image.id = "{{id}}-fail-1";

  let area = document.getElementById("dynamic-target");
  area.appendChild(image);
</script>
