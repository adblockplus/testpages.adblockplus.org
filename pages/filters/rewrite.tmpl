title = Rewrite
template = testcase
description = Check that a filter using the $rewrite filter option is working as expected.

<section class="testcase-panel">
  <h2>Script</h2>
  <p>Test that a filter using the $rewrite filter option works on a script.</p>
  <div id="rewrite-target" class="testcase-area">
    <div class="testcase-examplecontent">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The script should be blocked and the red element should not be added to the page.</li>
  </ul>
  <h3>Filters</h3>
  <ul class="testcase-filters">
    <li><pre>||{{ site_url|strip_proto }}/testfiles/rewrite/*.js$rewrite=abp-resource:blank-js,domain={{ site_url|domain }}</pre></li>
  </ul>
</section>

<script src="/testfiles/rewrite/script.js"></script>

<section class="testcase-panel">
  <h2>Audio</h2>
  <p>Test that a filter using the $rewrite filter option works on an audio file.</p>
  <div class="testcase-area">
    <audio id="mp3-target" class="testcase-nostyle"></audio>
    <div class="testcase-examplecontent">Example Content</div>
    <div class="testcase-expected-view">Duration:<br>0.144</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Check that the duration element shows more than one second length.</li>
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>Check that the duration element shows less than one second length.</li>
  </ul>
  <h3>Filters</h3>
  <ul class="testcase-filters">
    <li><pre>||{{ site_url|strip_proto }}/testfiles/rewrite/*.mp3$rewrite=abp-resource:blank-mp3,domain={{ site_url|domain }}</pre></li>
  </ul>
</section>

<section class="testcase-panel">
  <h2>Video</h2>
  <p>Test that a filter using the $rewrite filter option works on a video file.</p>
  <div class="testcase-area">
    <video id="mp4-target" class="testcase-nostyle"></video>
    <video class="testcase-expected-view"><source src="/media/blank.mp4" type="video/mp4"></video>
    <div class="testcase-examplecontent">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The embedded video should be blocked.</li>
  </ul>
  <h3>Filters</h3>
  <ul class="testcase-filters">
    <li><pre>||{{ site_url|strip_proto }}/testfiles/rewrite/*.mp4$rewrite=abp-resource:blank-mp4,domain={{ site_url|domain }}</pre></li>
  </ul>
</section>

<script>
  "use strict";

  function printDuration(mediaElement)
  {
    let duration = document.createElement("div");
    duration.innerHTML = `Duration:<br>${mediaElement.duration}`;
    if (mediaElement.duration < 1)
      duration.setAttribute("data-expectedresult", "pass");
    else
      duration.setAttribute("data-expectedresult", "fail");

    mediaElement.parentNode.appendChild(duration);
  }

  // Timestamp is needed to avoid caching, which would make tests fail
  let mp3 = document.getElementById("mp3-target");
  mp3.innerHTML = `<source src="/testfiles/rewrite/audio.mp3?${Date.now()}" type="audio/mpeg">`;
  let mp4 = document.getElementById("mp4-target");
  mp4.innerHTML = `<source src="/testfiles/rewrite/video.mp4?${Date.now()}" type="video/mp4">`;

  // mp4 should also print duration after adblockpluscore#254 is fixed
  if (mp3.readyState >= 1)
    printDuration(mp3);
  else
    mp3.addEventListener("loadedmetadata", () => printDuration(mp3));
</script>
