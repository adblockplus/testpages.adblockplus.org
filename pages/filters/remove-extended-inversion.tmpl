template = testcase
title = Remove Inversion
description = Check that remove inversion functionality is working as expected.

<style>

.removei-properties {
  height: 91px;
}

.removei-properties-not-hide {
  width: 137px;
}

.removei-chained {
  width: 138px;
}

.removei-case-not-hide {
  width: 139px;
}

.removei-wildcard-not-hide {
  cursor: pointer;
}

.removei-regex1 {
  width: 146px;
}

.removei-regex2 {
  width: 140px;
}

.removei-regex3 {
  width: 143px;
}

.removei-regex4 {
  width: 145px;
}

</style>

{% set case = "Basic :not(:-abp-properties()) usage with remove" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a remove filter using a :not(:-abp-properties()) selector removes its target.</p>
  <div id="{{id}}-area" class="testcase-area" >
    <div id="{{id}}-fail" class="removei-properties test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div  class="testcase-examplecontent removei-properties removei-properties-not-hide" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The DOM should have the red element removed, and replaced with a green element.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#?#.removei-properties:not(:-abp-properties(width: 137px)) {remove: true;}</pre></li>
  </ul>
</section>

{% set case = "Basic :not(:-abp-has()) usage with remove" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a remove filter using a :not(:-abp-has()) selector removes its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail" class="removei-has test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">
      Target
    </div>
    <div class="testcase-examplecontent removei-has" aria-label="{{id}}-example">
      <span class="removei-has-not-hide">Example Content</span>
    </div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The DOM should have the red element removed, and replaced with a green element.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#?#.removei-has:not(:-abp-has(span.removei-has-not-hide)) {remove: true;}</pre></li>
  </ul>
</section>

{% set case = "Basic :not(:-abp-contains()) usage with remove" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a remove filter using a not(:-abp-contains()) selector removes its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <span id="{{id}}-fail" class="removei-contains test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</span>
    <span class="testcase-examplecontent removei-contains" aria-label="{{id}}-example">example-content</span>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The DOM should have the red element removed, and replaced with a green element.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#?#.removei-contains:not(span:-abp-contains(example-content)) {remove: true;}</pre></li>
  </ul>
</section>

{% set case = "Chained extended selectors with not() selector with remove" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a remove filter using several of the extended selectors and not() selector removes its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" class="removei-chained-parent test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">
      Target
    </div>
    <div class="testcase-examplecontent removei-chained-parent" aria-label="{{id}}-example">
      <div class="removei-chained">Example Content</div>
    </div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The DOM should have the red element removed, and replaced with a green element.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#?#.removei-chained-parent:not(:-abp-has(> div:-abp-properties(width: 138px))) {remove: true;}</pre></li>
  </ul>
</section>

{% set case = "Case insensitive extended selectors with not() selector with remove" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a remove filter is case insensitive and still removes its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail" class="removei-case test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div class="testcase-examplecontent removei-case removei-case-not-hide" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The DOM should have the red element removed, and replaced with a green element.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#?#.removei-case:not(:-abp-properties(WiDtH: 139px)) {remove: true;}</pre></li>
  </ul>
</section>

{% set case = "Wildcard in extended selector combined with :not() selector with remove" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a remove filter using wildcards still not removes its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail" class="removei-wildcard test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div class="testcase-examplecontent removei-wildcard removei-wildcard-not-hide" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The DOM should have the red element removed, and replaced with a green element.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#?#.removei-wildcard:not(:-abp-properties(cursor:*)) {remove: true;}</pre></li>
  </ul>
</section>

{% set case = "Regular expression in :not(:-abp-properties()) with remove" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a remove filter using regular expressions still removes its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <div id="{{id}}-fail-1" class="removei-regex removei-regex1 test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div id="{{id}}-fail-2" class="removei-regex removei-regex2 test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">Target</div>
    <div class="testcase-examplecontent removei-regex removei-regex3">Not a target</div>
    <div class="testcase-examplecontent removei-regex removei-regex4" aria-label="{{id}}-example">Example Content</div>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>The DOM should have both the red element removed, and replaced with a green element.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#?#.removei-regex:not(:-abp-properties(/width: 14[1-5]px;/)) {remove: true;}</pre></li>
  </ul>
</section>

{% set case = "Regular expression in :not(:-abp-contains()) with remove" %}
{% set id = get_id(case) %}
<section id="{{id}}-section" class="testcase-panel">
  {{ heading(case) }}
  <p>Test that a remove filter using regular expressions still removes its target.</p>
  <div id="{{id}}-area" class="testcase-area">
    <span id="{{id}}-fail-1" class="removei-contains-regex test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">removei-containsregextarget</span>
    <span id="{{id}}-fail-2" class="removei-contains-regex test-if-removed" data-expectedresult="fail" data-dp="fail" aria-label="{{id}}-fail">removei-containsregextarget2</span>
    <span class="testcase-examplecontent removei-contains-regex">example-contentregex1</span>
    <span class="testcase-examplecontent removei-contains-regex" aria-label="{{id}}-example">example-contentregex2</span>
  </div>
  <h3>Steps</h3>
  <ul class="testcase-steps">
    <li>Add filter #1.</li>
    <li>Refresh page.</li>
    <li>Both red target elements should be hidden and the space collapsed.</li>
  </ul>
  <h3>Filters</h3>
  <ul id="{{id}}-filters" class="testcase-filters">
    <li><pre>{{ site_url|domain }}#?#.removei-contains-regex:not(span:-abp-contains(/example-contentregex\d/)) {remove: true;}</pre></li>
  </ul>
</section>

<script>
  "use strict";

  const testcases = document.getElementsByClassName("testcase-area");
  [...testcases].forEach(tca => {
    verifyTargetRemoved(tca, "test-if-removed"); // eslint-disable-line no-undef
  });
</script>
