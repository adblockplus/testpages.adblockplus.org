# This file is part of Adblock Plus <https://adblockplus.org/>,
# Copyright (C) 2006-present eyeo GmbH
#
# Adblock Plus is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# Adblock Plus is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.

---

stages:
  - test
  - build_production
  - deploy_production

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

# TEST #########################################################################

.test_rules:
  stage: test
  rules:
    - if: $SKIP_CI_TESTS == "true"
      when: never
    - when: always
  interruptible: true

.test_runner:
  extends: .test_rules
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_DRIVER: overlay2

test:lint:
  extends: .test_runner
  script:
    - docker build -t lintimage -f test/lint.Dockerfile .
    - docker run -t lintimage

.test:
  extends: .test_runner
  script:
    - docker build -t testpages .
    - docker run --shm-size=1g -e GREP="$GREP" -t testpages
  after_script:
    - IMAGE_ID=$(docker ps -aqf ancestor=testpages)
    - docker cp $IMAGE_ID:/testpages.adblockplus.org/test/screenshots .
      2> /dev/null
    - docker cp $IMAGE_ID:/var/log/nginx/ .
  artifacts:
    paths:
      - screenshots/
      - nginx/
    when: on_failure
    expire_in: 1 mo

test:chrome:latest:
  extends: .test
  variables:
    GREP: chromium latest

test:chrome:beta:
  extends: .test
  allow_failure: true
  variables:
    GREP: chromium beta

test:chrome:dev:
  extends: .test
  allow_failure: true
  variables:
    GREP: chromium dev

test:chrome:oldest:
  extends: .test
  variables:
    GREP: chromium 88.0

test:firefox:latest:
  extends: .test
  variables:
    GREP: firefox latest

test:firefox:beta:
  extends: .test
  allow_failure: true
  variables:
    GREP: firefox beta

test:firefox:oldest:
  extends: .test
  variables:
    GREP: firefox 68.0

test:edge:latest:
  extends: .test
  variables:
    GREP: edge latest

test:edge:windows:
  extends: .test_rules
  tags:
    - shared-windows
    - windows
    - windows-1809
  before_script:
    # Fix for refreshenv
    # https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/issues/13#note_337853320
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    # Install Microsoft Edge
    # yamllint disable-line rule:line-length
    - Invoke-WebRequest -Uri "${Env:CI_API_V4_URL}/projects/${Env:CI_PROJECT_ID}/packages/generic/microsoft-edge/79.0.309/MicrosoftEdgeEnterpriseX64.msi"
      -Headers @{'JOB-TOKEN' = $Env:CI_JOB_TOKEN}
      -OutFile 'MicrosoftEdgeEnterpriseX64.msi'
    - Start-Process msiexec
      -ArgumentList "/i MicrosoftEdgeEnterpriseX64.msi /norestart /qn" -Wait
    # Install other packages
    - choco install -y nginx --version=1.19.0
    - $Env:NGINX_WIN = "C:\tools\nginx-1.19.0"
    - $Env:NGINX_LINUX = "C:/tools/nginx-1.19.0"
    - choco install -y openssl
    - choco install -y python3 --version 3.11.4
    - choco upgrade -y --no-progress nodejs --version 18.17.1
    - refreshenv
    # nginx config
    - xcopy test\etc\nginx\* $Env:NGINX_WIN\conf\ /E /V /F /H
    - (Get-Content $Env:NGINX_WIN\conf\nginx.conf).replace("octet-stream;",
        "octet-stream;`n
        include $Env:NGINX_LINUX/conf/sites-enabled-windows/*.conf;"
      ) | Set-Content $Env:NGINX_WIN\conf\nginx.conf
    - openssl req -x509 -newkey rsa:4096
      -keyout $Env:NGINX_WIN\conf\${Env:DOMAIN}_key.pem
      -out $Env:NGINX_WIN\conf\${Env:DOMAIN}_cert.pem
      -days 365 -nodes -subj "/CN=$Env:DOMAIN"
    - echo "`n127.0.0.1 $Env:DOMAIN" |
      Add-Content c:\windows\system32\drivers\etc\hosts
    # Build CMS
    - git clone https://gitlab.com/eyeo/websites/cms.git
    - git -C cms checkout fbd1527b9f98d99a8b62c6ad5e32ac7758c19a28
    - pip3 install -r cms\requirements.txt
    # Build tests
    - npm install
    # Generate test pages files
    - mkdir -p $Env:NGINX_WIN\html\$Env:DOMAIN
    - $Env:PYTHONPATH = "cms"
    - python -m cms.bin.generate_static_pages . $Env:NGINX_WIN\html\$Env:DOMAIN
  script:
    # Run test pages server
    - Start-Process "$Env:NGINX_WIN\nginx.exe"
      -WorkingDirectory "$Env:NGINX_WIN" -PassThru
    # Run endpoints server
    - Start-Process "npm" -ArgumentList "run start-endpoints" -PassThru
    - node ./test/extension-tests/extension-download.js
    - npm run test -- -g "edge"
  variables:
    TEST_PAGES_URL: https://local.testpages.adblockplus.org:5001/en/
    SITE_URL: https://local.testpages.adblockplus.org:5001
    DOMAIN: local.testpages.adblockplus.org
    TEST_PAGES_INSECURE: "true"
  artifacts:
    paths:
      - ./test/screenshots
    when: on_failure
    expire_in: 1 mo

# BUILD, DEPLOY ################################################################

.production:
  tags:
    - eyeo_cms_web_server_testpages-1.uplink.eyeo.it
  only:
    - master

.build_production:
  stage: build_production
  extends: .production
  script:
    - env PYTHONPATH=/opt/cms
      python3 -m cms.bin.generate_static_pages $PWD build
  artifacts:
    name: $CI_COMMIT_REF_SLUG
    paths:
      - build

build:abptestpages:
  extends: .build_production
  variables:
    SITE_URL: https://abptestpages.org

.deploy_production:
  stage: deploy_production
  extends: .production
  script:
    - echo $DEPLOY_SCRIPT
    - sudo /usr/local/sbin/$DEPLOY_SCRIPT $CI_PROJECT_DIR/build/ $CI_PROJECT_DIR
  environment:
    name: $DOMAIN
    url: https://$DOMAIN

deploy:abptestpages:
  extends: .deploy_production
  dependencies:
    - build:abptestpages
  variables:
    DOMAIN: abptestpages.org
    DEPLOY_SCRIPT: deploy_testpages
