# This file is part of Adblock Plus <https://adblockplus.org/>,
# Copyright (C) 2006-present eyeo GmbH
#
# Adblock Plus is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# Adblock Plus is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.

---

.production:
  variables:
    DOMAIN: testpages.adblockplus.org
  tags:
    - eyeo_cms_web_server_testpages-1.uplink.eyeo.it

.test_runner:
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  before_script:
    - docker info
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2

stages:
  - test
  - build_production
  - deploy_production

.build_chrome:
  needs:
    - &build_chrome
      job: build:chrome
      artifacts: true
      project: eyeo/adblockplus/adblockpluschrome

.build_firefox:
  needs:
    - &build_firefox
      job: build:firefox
      artifacts: true
      project: eyeo/adblockplus/adblockpluschrome

.test:
  extends: .test_runner
  stage: test
  script:
    - docker build -t testpages --build-arg REVISION="$REVISION"
      --build-arg EXTENSION_FILE="$EXTENSION_FILE"
      --build-arg TARGET="$TARGET" .
    - docker run -e BROWSER="$BROWSER" -e SKIP_BUILD="true" testpages
  after_script:
    - IMAGE_ID=$(docker ps -aqf ancestor=testpages)
    - docker cp $IMAGE_ID:/adblockpluschrome/test/screenshots . 2> /dev/null
    - docker cp $IMAGE_ID:/var/log/nginx/ .
  artifacts:
    paths:
      - screenshots/
      - nginx/
    when: on_failure
    expire_in: 1 mo
  interruptible: true

.test_chrome:
  extends: .test
  variables:
    EXTENSION_FILE: adblockpluschrome-*.zip
    TARGET: chrome

.test_firefox:
  extends: .test
  variables:
    EXTENSION_FILE: adblockplusfirefox-*.xpi
    TARGET: firefox

.test_edge:
  stage: test
  tags:
    - shared-windows
    - windows
    - windows-1809
  before_script:
    # Fix for refreshenv
    # https://gitlab.com/gitlab-org/ci-cd/shared-runners/images/gcp/windows-containers/-/issues/13#note_337853320
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    # Install packages
    - choco install -y nginx --version=1.19.0
    - $Env:NGINX = "C:\tools\nginx-1.19.0"
    - $Env:NGINX_LINUX = "C:/tools/nginx-1.19.0"
    - choco install -y openssl.light
    - choco install -y microsoft-edge --version=79.0.309.71
    - choco install -y python2
    - choco upgrade -y nodejs --version 12.17.0
    - refreshenv
    # nginx config
    - xcopy test\etc\nginx\* $Env:NGINX\conf\ /E /V /F /H
    - (Get-Content $Env:NGINX\conf\nginx.conf).replace("octet-stream;",
        "octet-stream;`n
        include $Env:NGINX_LINUX/conf/sites-enabled-windows/*.conf;"
      ) | Set-Content $Env:NGINX\conf\nginx.conf
    - openssl req -x509 -newkey rsa:4096
      -keyout $Env:NGINX\conf\local.testpages.adblockplus.org_key.pem
      -out $Env:NGINX\conf\local.testpages.adblockplus.org_cert.pem
      -days 365 -nodes -subj "/CN=local.testpages.adblockplus.org"
    - echo "`n127.0.0.1 local.testpages.adblockplus.org" |
      Add-Content c:\windows\system32\drivers\etc\hosts
    # Build CMS
    - git clone https://gitlab.com/eyeo/websites/cms.git
    - pip install -r cms\requirements.txt
    # Build adblockpluschrome
    - git clone https://gitlab.com/eyeo/adblockplus/adblockpluschrome.git
    - Expand-Archive -Path adblockpluschrome-*.zip
      -DestinationPath adblockpluschrome\devenv.chrome
    - cd adblockpluschrome; git checkout $Env:REVISION;
      git submodule update --init --recursive; npm install; cd ..
    # Generate test pages files
    - mkdir -p $Env:NGINX\html\local.testpages.adblockplus.org
    - (Get-Content settings.ini).replace(
        "testpages.adblockplus.org", "local.testpages.adblockplus.org"
      ) | Set-Content settings.ini
    - $Env:PYTHONPATH = "cms"
    - python -m cms.bin.generate_static_pages .
      $Env:NGINX\html\local.testpages.adblockplus.org
  script:
    # Run testpages server
    - Start-Process -NoNewWindow "$Env:NGINX\nginx.exe"
      -WorkingDirectory "$Env:NGINX" -PassThru
    # Run tests
    - cd adblockpluschrome
    - echo "INFO - Tests will execute based on the following revision:";
      git status | Select -First 1; git log -5 --oneline
    # Sitekey test disabled - testpages#41
    - $npm_process = (Start-Process -NoNewWindow "npm"
      -ArgumentList "run test-only -- -g '`"^`"Edge.*Test`"
      `"pages((?!Sitekey`"|`"Final`" `"checks).)*$'" -PassThru -Wait)
    - Stop-Process -Name "nginx" -Force -PassThru
    - Start-Sleep -Seconds 3 # Allow npm process to finish
    - Exit($npm_process.ExitCode)
  variables:
    TEST_PAGES_URL: https://local.testpages.adblockplus.org/en/
    TEST_PAGES_INSECURE: "true"
    SKIP_BUILD: "true"
  artifacts:
    paths:
      - adblockpluschrome/test/screenshots/
    when: on_failure
    expire_in: 1 mo
  interruptible: true

.master_chrome:
  extends: .test_chrome
  needs:
    - <<: *build_chrome
      ref: master
  variables:
    REVISION: master

.master_firefox:
  extends: .test_firefox
  needs:
    - <<: *build_firefox
      ref: master
  variables:
    REVISION: master

.next_chrome:
  extends: .test_chrome
  needs:
    - <<: *build_chrome
      ref: next
  variables:
    REVISION: next

.next_firefox:
  extends: .test_firefox
  needs:
    - <<: *build_firefox
      ref: next
  variables:
    REVISION: next

lint:
  extends: .test_runner
  stage: test
  needs: []
  script:
    - docker build -t lintimage -f test/lint.Dockerfile .
    - docker run lintimage
  interruptible: true

# some of the test jobs are expected to fail when there are breaking
# changes between adblockpluschrome's next and master revisions, so
# master:* jobs are tagged to allow failure
master:chrome:latest:
  extends: .master_chrome
  variables:
    BROWSER: Chromium \(latest\)
  allow_failure: true

master:chrome:oldest:
  extends: .master_chrome
  variables:
    BROWSER: Chromium \(oldest\)
  allow_failure: true

master:edge:
  extends: .test_edge
  needs:
    - <<: *build_chrome
      ref: master
  variables:
    REVISION: master
  allow_failure: true

master:firefox:latest:
  extends: .master_firefox
  variables:
    BROWSER: Firefox \(latest\)
  allow_failure: true

master:firefox:oldest:
  extends: .master_firefox
  variables:
    BROWSER: Firefox \(oldest\)
  allow_failure: true

next:chrome:latest:
  extends: .next_chrome
  variables:
    BROWSER: Chromium \(latest\)

next:chrome:oldest:
  extends: .next_chrome
  variables:
    BROWSER: Chromium \(oldest\)

next:edge:
  extends: .test_edge
  needs:
    - <<: *build_chrome
      ref: next
  variables:
    REVISION: next

next:firefox:latest:
  extends: .next_firefox
  variables:
    BROWSER: Firefox \(latest\)

next:firefox:oldest:
  extends: .next_firefox
  variables:
    BROWSER: Firefox \(oldest\)

build_production:
  stage:
    build_production
  extends:
    .production
  script:
    - env PYTHONPATH=/opt/cms:/opt/sitescripts
      python -m cms.bin.generate_static_pages $PWD build
  artifacts:
    name:
      $CI_COMMIT_REF_SLUG
    paths:
      - build
  only:
    - master

deploy_production:
  stage:
    deploy_production
  extends:
    .production
  dependencies:
    - build_production
  script:
    - sudo /usr/local/sbin/deploy_eyeo_cms_web_$DOMAIN $CI_PROJECT_DIR/build/
  environment:
    name: $DOMAIN
    url: http://$DOMAIN
  only:
    - master
