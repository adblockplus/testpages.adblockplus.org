map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream websocket {
  server localhost:4001;
}

upstream exception_websocket {
  server localhost:4002;
}

server
{
  server_name local.abptestpages.org;

  listen 127.0.0.1:5001 ssl http2 default_server;

  ssl_certificate local.abptestpages.org_cert.pem;
  ssl_certificate_key local.abptestpages.org_key.pem;
  ssl_dhparam /etc/nginx/dhparam.pem;
  add_header Strict-Transport-Security max-age=31536000;

  access_log /var/log/nginx/access.local.abptestpages.org.log;

  # redirect server error pages to the static page /50x.html
  error_page 500 502 503 504 /50x.html;
  location = /50x.html
  {
    root /usr/share/nginx/html;
  }

  if ($http_host ~ "^(.+)\.$")
  {
    set $canonical_host $1;
    rewrite ^(.*) $scheme://$canonical_host$1 permanent;
  }

  root /var/www/local.abptestpages.org;
  index index;
  default_type text/html;
  charset utf-8;

  set $index_page "index";

  location /
  {
    expires 1d;

    # Redirect server/language root

    rewrite ^/$ /$index_page last;
    rewrite ^/(\w\w(_\w\w)?)$ /$1/ permanent;
    rewrite ^/(\w\w(_\w\w)?)/$ /$1/$index_page last;

    # Match Accept-Language header against available languages
    set $preferredLang en;
    set $preferredRegion "";
    if ($http_accept_language ~ ^(\w\w)\b)
    {
      set $preferredLang $1;
    }
    if ($http_accept_language ~ ^\w\w-(\w\w)\b)
    {
      set $preferredRegion $1;
    }

    if ($arg_fb_locale ~ ^(\w\w)_(\w\w)$)
    {
      set $preferredLang $1;
      set $preferredRegion $2;
    }

    # Redirect canonical URLs to language-specific versions
    if (-e "$document_root/${preferredLang}_$preferredRegion$uri")
    {
      rewrite ^(.*) /${preferredLang}_$preferredRegion$1 last;
    }
    if (-e "$document_root/$preferredLang$uri")
    {
      rewrite ^(.*) /$preferredLang$1 last;
    }
    if (-e "$document_root/en$uri")
    {
      rewrite ^(.*) /en$1 last;
    }
  }

  location /sitekey-frame
  {
    proxy_pass http://localhost:4000/sitekey-frame;
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /websocket
  {
    proxy_pass http://websocket;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
  }

  location /exception_websocket
  {
    proxy_pass http://exception_websocket;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
  }
}
